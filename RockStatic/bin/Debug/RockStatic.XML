<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RockStatic</name>
    </assembly>
    <members>
        <member name="T:RockStatic.DescriptiveResult">
            <summary>
            Clase de estadistica descriptiva. Jan Low, 2008. https://www.codeproject.com/Articles/27340/A-User-Friendly-C-Descriptive-Statistic-Class
            </summary>
        </member>
        <member name="M:RockStatic.DescriptiveResult.#ctor">
            <summary>
            DescriptiveResult default constructor
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.Count">
            <summary>
            Count
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.Sum">
            <summary>
            Sum
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.Mean">
            <summary>
            Arithmatic mean
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.GeometricMean">
            <summary>
            Geometric mean
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.HarmonicMean">
            <summary>
            Harmonic mean
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.Min">
            <summary>
            Minimum value
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.Max">
            <summary>
            Maximum value
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.Range">
            <summary>
            The range of the values
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.Variance">
            <summary>
            Sample variance
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.StdDev">
            <summary>
            Sample standard deviation
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.Skewness">
            <summary>
            Skewness of the data distribution
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.Kurtosis">
            <summary>
            Kurtosis of the data distribution
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.IQR">
            <summary>
            Interquartile range
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.Median">
            <summary>
            Median, or second quartile, or at 50 percentile
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.FirstQuartile">
            <summary>
            First quartile, at 25 percentile
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.ThirdQuartile">
            <summary>
            Third quartile, at 75 percentile
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.SumOfError">
            <summary>
            Sum of Error
            </summary>
        </member>
        <member name="F:RockStatic.DescriptiveResult.SumOfErrorSquare">
            <summary>
            The sum of the squares of errors
            </summary>
        </member>
        <member name="M:RockStatic.DescriptiveResult.Percentile(System.Double)">
            <summary>
            Percentile
            </summary>
            <param name="percent">Pecentile, between 0 to 100</param>
            <returns>Percentile</returns>
        </member>
        <member name="T:RockStatic.Descriptive">
            <summary>
            Descriptive class
            </summary>
        </member>
        <member name="F:RockStatic.Descriptive.Result">
            <summary>
            Descriptive results
            </summary>
        </member>
        <member name="M:RockStatic.Descriptive.#ctor">
            <summary>
            Descriptive analysis default constructor
            </summary>
        </member>
        <member name="M:RockStatic.Descriptive.#ctor(System.Double[])">
            <summary>
            Descriptive analysis constructor
            </summary>
            <param name="dataVariable">Data array</param>
        </member>
        <member name="M:RockStatic.Descriptive.Analyze">
            <summary>
            Run the analysis to obtain descriptive information of the data
            </summary>
        </member>
        <member name="M:RockStatic.Descriptive.percentile(System.Double[],System.Double)">
            <summary>
            Calculate percentile of a sorted data set
            </summary>
            <param name="sortedData"></param>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:RockStatic.AboutForm">
            <summary>
            Ventana que contiene la información de derechos de autor de la aplicación ROCKSTATIC
            </summary>
        </member>
        <member name="M:RockStatic.AboutForm.#ctor">
            <summary>
            Initialize Component
            </summary>
        </member>
        <member name="M:RockStatic.AboutForm.AboutForm_FormClosed(System.Object,System.Windows.Forms.FormClosedEventArgs)">
            <summary>
            Informa al MainForm padre que se ha cerrado la ventana
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:RockStatic.AboutForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RockStatic.AboutForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RockStatic.AboutForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RockStatic.CAreaInteres">
            <summary>
            Esta tipo de dato maneja la informacion de las areas de interes seleccionadas
            </summary>
        </member>
        <member name="F:RockStatic.CAreaInteres.x">
            <summary>
            Coordenada x de la esquina superior izquierda
            </summary>
        </member>
        <member name="F:RockStatic.CAreaInteres.y">
            <summary>
            Coordenada y de la esquina superior izquierda
            </summary>
        </member>
        <member name="F:RockStatic.CAreaInteres.width">
            <summary>
            Ancho del cuadrado
            </summary>
        </member>
        <member name="F:RockStatic.CAreaInteres.nombre">
            <summary>
            Nombre que se le da al cuadrado
            </summary>
        </member>
        <member name="F:RockStatic.CAreaInteres.ini">
            <summary>
            Primer slide del area de interes
            </summary>
        </member>
        <member name="F:RockStatic.CAreaInteres.fin">
            <summary>
            Ultimo slide del area de interes
            </summary>
        </member>
        <member name="M:RockStatic.CAreaInteres.#ctor">
            <summary>
            Constructor por defecto
            </summary>
        </member>
        <member name="M:RockStatic.CAreaInteres.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Constructor con asignacion
            </summary>
            <param name="_x">Posicion X del centro del area de interes</param>
            <param name="_y">Posicion Y del centro del area de interes</param>
            <param name="_width">Ancho del area de interes</param>
            <param name="_nombre">Nombre del area de interes</param>
            <param name="_ini">Primer slide del area de interes</param>
            <param name="_fin">Ultimo slide del area de interes</param>
        </member>
        <member name="M:RockStatic.CAreaInteres.#ctor(RockStatic.CAreaInteres)">
            <summary>
            Constructor para duplicar el tipo de dato
            </summary>
            <param name="area">Objeto CAreasInteres a duplicar</param>
        </member>
        <member name="T:RockStatic.AuxThread">
            <summary>
            Clase auxiliar para poder generar todos los Bitmap de los cortes horizontales/verticales
            </summary>
        </member>
        <member name="F:RockStatic.AuxThread.pixels16">
            <summary>
            Guarda la copia de los pixeles que se van a procesar como imagen 
            </summary>
        </member>
        <member name="F:RockStatic.AuxThread.corte">
            <summary>
            Imagen resultante
            </summary>
        </member>
        <member name="F:RockStatic.AuxThread.segmentacion">
            <summary>
            Segmentacion resultante
            </summary>
        </member>
        <member name="F:RockStatic.AuxThread.width">
            <summary>
            Ancho deseado de la imagen resultante
            </summary>
        </member>
        <member name="F:RockStatic.AuxThread.height">
            <summary>
            Alto deseado de la imagen resultante
            </summary>
        </member>
        <member name="F:RockStatic.AuxThread.minNormalizacion">
            <summary>
            Valor minimo CT de la normalizacion
            </summary>
        </member>
        <member name="F:RockStatic.AuxThread.maxNormalizacion">
            <summary>
            Valor maximo CT de la normalizacion
            </summary>
        </member>
        <member name="F:RockStatic.AuxThread.xcenter">
            <summary>
            Centro del circulo de la segmentacion circular
            </summary>
        </member>
        <member name="F:RockStatic.AuxThread.ycenter">
            <summary>
            Centro del circulo de la segmentacion circular
            </summary>
        </member>
        <member name="F:RockStatic.AuxThread.rad">
            <summary>
            Radio del circulo de la segmentacion circular
            </summary>
        </member>
        <member name="F:RockStatic.AuxThread._doneEvent">
            <summary>
            Manejador de finalizacion del thread
            </summary>
        </member>
        <member name="M:RockStatic.AuxThread.#ctor(System.Collections.Generic.List{System.UInt16},System.Int32,System.Int32,System.Int32,System.Int32,System.Threading.ManualResetEvent)">
            <summary>
            Constructor con asignación para crear una imagen de un corte longitudinal
            </summary>
            <param name="_pixels16">copia de los pixeles que se van a procesar como imagen </param>
            <param name="_width">Ancho deseado de la imagen resultante</param>
            <param name="_height">Alto deseado de la imagen resultante</param>
            <param name="_minNormalizacion">Valor minimo CT de la normalizacion</param>
            <param name="_maxNormalizacion">Valor maximo CT de la normalizacion</param>
            <param name="_done">Parametro para el control del ThreadPool</param>
        </member>
        <member name="M:RockStatic.AuxThread.#ctor(System.Collections.Generic.List{System.UInt16},System.Int32,System.Int32,System.Threading.ManualResetEvent)">
            <summary>
            Constructor con asignación para crear la imagen de un DICOM
            </summary>
            <param name="_pixels16">copia de los pixeles que se van a procesar como imagen</param>
            <param name="_width">Ancho deseado de la imagen resultante</param>
            <param name="_height">Alto deseado de la imagen resultante</param>
            <param name="_done">Parametro para el control del ThreadPool</param>
        </member>
        <member name="M:RockStatic.AuxThread.#ctor(System.Collections.Generic.List{System.UInt16},System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Threading.ManualResetEvent)">
            <summary>
            Constructor con asignación para realizar la segmentacion circular, con threads, del core de un datacubo
            </summary>
            <param name="_pixels16">copia de los pixeles que se van a procesar</param>
            <param name="_xcenter">Coordenadas cartesianas del centro X, con cero en la esquina superior izquierda</param>
            <param name="_ycenter">Coordenadas cartesianas del centro Y, con cero en la esquina superior izquierda</param>
            <param name="_rad">Radio del circulo a extraer</param>
            <param name="_width">Ancho de la imagen original</param>
            <param name="_height">Alto de la imagen original</param>
            <param name="_done">Parametro para el control del ThreadPool</param>
        </member>
        <member name="M:RockStatic.AuxThread.CreateBitmap">
            <summary>
            Rutina para el Threadpool para crear una imagen del pixeldata cargado
            </summary>
            <returns>Imagen generada a partir del pixeldata cargado</returns>
        </member>
        <member name="M:RockStatic.AuxThread.CreateBitmapCorte">
            <summary>
            Metodo que genera la imagen del corte longitudinal
            </summary>
            <returns>Imagen del corte longitudinal</returns>
        </member>
        <member name="M:RockStatic.AuxThread.ThreadCrearBitmapCorte(System.Object)">
            <summary>
            Wrapper method for use with thread pool.
            </summary>
            <param name="threadContext"></param> 
        </member>
        <member name="M:RockStatic.AuxThread.ThreadCrearBitmap(System.Object)">
            <summary>
            Wrapper method for use with thread pool.
            </summary>
            <param name="threadContext">Manejador del hilo</param> 
        </member>
        <member name="M:RockStatic.AuxThread.SegmentarCircular">
            <summary>
            Se segmenta la imagen (pixelDatata) que se pasa en el constructor de acuerdo con la informacion de centro y radio que se pasa en el constructor
            </summary>
            <returns>Imagen que contiene la segmentacion circular</returns>
        </member>
        <member name="M:RockStatic.AuxThread.ThreadSegmentar(System.Object)">
            <summary>
            Wrapper method for use with thread pool.
            </summary>
            <param name="threadContext">Manejador del hilo</param> 
        </member>
        <member name="P:RockStatic.AuxThread.Segmentacion">
            <summary>
            Devuelve la segmentacion resultante
            </summary>
        </member>
        <member name="P:RockStatic.AuxThread.Corte">
            <summary>
            Devuelve la imagen generada
            </summary>
        </member>
        <member name="T:RockStatic.CCuadrado">
            <summary>
            Tipo de dato para almacenar en memoria la seleccion de areas cuadradas que se dibujan en pantalla
            
            Crisostomo Barajas
            Junio 2015
            </summary>
        </member>
        <member name="F:RockStatic.CCuadrado.x">
            <summary>
            Coordenada x de la esquina superior izquierda
            </summary>
        </member>
        <member name="F:RockStatic.CCuadrado.y">
            <summary>
            Coordenada y de la esquina superior izquierda
            </summary>
        </member>
        <member name="F:RockStatic.CCuadrado.width">
            <summary>
            Ancho del cuadrado
            </summary>
        </member>
        <member name="F:RockStatic.CCuadrado.nombre">
            <summary>
            Nombre que se le da al cuadrado
            </summary>
        </member>
        <member name="M:RockStatic.CCuadrado.#ctor">
            <summary>
            Constructor por defecto
            </summary>
        </member>
        <member name="M:RockStatic.CCuadrado.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor con asignacion
            </summary>
            <param name="inX">coordenada x del centro</param>
            <param name="inY">coordenada y del centro</param>
            <param name="inR">radio</param>
        </member>
        <member name="M:RockStatic.CCuadrado.#ctor(RockStatic.CCuadrado)">
            <summary>
            Constructor con asignacion. Se crea una copia del elemento CCuadrado que se pasa como argumento
            </summary>
            <param name="copia">Elemento CCuadrado que se va a duplicar</param>
        </member>
        <member name="T:RockStatic.CCirculo">
            <summary>
            Tipo de dato para almacenar en memoria la seleccion de areas circulares que se dibujan en pantalla
            
            Crisostomo Barajas
            Junio 2015
            </summary>
        </member>
        <member name="F:RockStatic.CCirculo.x">
            <summary>
            Coordenada x del centro del circulo
            </summary>
        </member>
        <member name="F:RockStatic.CCirculo.y">
            <summary>
            Coordenada y del centro del circulo
            </summary>
        </member>
        <member name="F:RockStatic.CCirculo.r">
            <summary>
            Radio del circulo
            </summary>
        </member>
        <member name="F:RockStatic.CCirculo.nombre">
            <summary>
            Nombre que se le da al circulo
            </summary>
        </member>
        <member name="M:RockStatic.CCirculo.#ctor">
            <summary>
            Constructor por defecto
            </summary>
        </member>
        <member name="M:RockStatic.CCirculo.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor con asignacion
            </summary>
            <param name="inX">coordenada x del centro</param>
            <param name="inY">coordenada y del centro</param>
            <param name="inR">radio</param>
        </member>
        <member name="M:RockStatic.CCirculo.#ctor(RockStatic.CCirculo)">
            <summary>
            Constructor con asignacion. Se crea un duplicado del elemento CCirculo que se pasa como argumento
            </summary>
            <param name="punto">elemento CCirculo que se va a duplicar</param>
        </member>
        <member name="T:RockStatic.MyDataCube">
            <summary>
            Wrapper para la libreria EvilDICOM (Rex Cardan, http://www.rexcardan.com/evildicom/) con modificaciones propias para ser manejadas por la suite RockUIS.
            Un objeto MyDataCube contiene un List de MyDicom, es decir un datacubo. Contiene las rutinas necesarias para manejar el datacubo, crear el histograma y los cortes laterales
            </summary>
        </member>
        <member name="F:RockStatic.MyDataCube.dataCube">
            <summary>
            List de MyDicom que conforman el datacubo
            </summary>
        </member>
        <member name="F:RockStatic.MyDataCube.histograma">
            <summary>
            Guarda la informacion del histograma en 100 bins
            </summary>
        </member>
        <member name="F:RockStatic.MyDataCube.bins">
            <summary>
            Marcas de clase del histograma de 100 bins
            </summary>
        </member>
        <member name="F:RockStatic.MyDataCube.coresHorizontal">
            <summary>
            List que contiene los List de ushort que contienen los pixeles CT para cada corte horizontal del core
            </summary>
        </member>
        <member name="F:RockStatic.MyDataCube.coresVertical">
            <summary>
            List que contiene los List de ushort que contienen los pixeles CT para cada corte vertical del core
            </summary>
        </member>
        <member name="F:RockStatic.MyDataCube.widthSeg">
            <summary>
            Indica el ancho de la imagen segmentada resultante
            </summary>
        </member>
        <member name="M:RockStatic.MyDataCube.#ctor">
            <summary>
            Constructor por defecto
            </summary>
        </member>
        <member name="M:RockStatic.MyDataCube.#ctor(System.String[])">
            <summary>
            Constructor con asignación
            </summary>
            <param name="rutas">Array de rutas de los DICOM a cargar</param>
        </member>
        <member name="M:RockStatic.MyDataCube.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Constructor con asignación
            </summary>
            <param name="rutas">Array de rutas de los DICOM a cargar</param>
        </member>
        <member name="M:RockStatic.MyDataCube.CropRect(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Segmenta la totalidad del datacubo a una seccion rectangular
            </summary>
            <param name="centerX">Centro X de la seccion rectangular, con cero en la esquina superior izquierda</param>
            <param name="centerY">Centro Y de la seccion rectangular, con cero en la esquina superior izquierda</param>
            <param name="altoRect">Distancia del centro al borde superior del rectangulo</param>
            <param name="anchoRect">Distancia del centro al borde lateral del rectangulo</param>
        </member>
        <member name="M:RockStatic.MyDataCube.CropCirc(System.Int32,System.Int32,System.Int32)">
            <summary>
            Segmenta la totalidad del datacubo a una seccion circular
            </summary>
            <param name="centerX">Centro X de la seccion rectangular, con cero en la esquina superior izquierda</param>
            <param name="centerY">Centro Y de la seccion rectangular, con cero en la esquina superior izquierda</param>
            <param name="radio">Radio del circulo a extraer</param>
        </member>
        <member name="M:RockStatic.MyDataCube.CrearBitmap">
            <summary>
            Genera la totalidad de los bitmap del datacubo
            </summary>
        </member>
        <member name="M:RockStatic.MyDataCube.CrearBitmapThread">
            <summary>
            Genera la totalidad de los bitmap del datacubo usando threads
            </summary>
        </member>
        <member name="M:RockStatic.MyDataCube.SegCircThread(RockStatic.CCuadrado)">
            <summary>
            Genera la totalidad de las segmentaciones circulares de cores usando threads
            </summary>
            <param name="area">Objeto CCuadrado con la información del area a segmentar</param>
        </member>
        <member name="M:RockStatic.MyDataCube.CrearBitmap(System.Int32,System.Int32)">
            <summary>
            Genera la totalidad de los bitmap del datacubo normalizando segun los límites que se le pasan
            </summary>
            <param name="minNormalizacion">Valor minimo CT de la normalizacion</param>
            <param name="maxNormalizacion">Valor maximo CT de la normalizacion</param>
        </member>
        <member name="M:RockStatic.MyDataCube.GenerarHistograma">
            <summary>
            Genera el histograma y las marcas de clase para el datacubo, con bins = raiz de numero de datos
            </summary>
        </member>
        <member name="M:RockStatic.MyDataCube.GenerarCoreHorizontal(System.Int32)">
            <summary>
            Se genera un plano de core horizontal que corresponde al indice que se pasa como argumento
            </summary>
            <param name="indice">Numero de la fila que se debe extraer de cada DICOM</param>
            <returns>Core horizontal generado en la posicion indicada</returns>
        </member>
        <member name="M:RockStatic.MyDataCube.GenerarCoreHorizontalRV(System.Int32)">
            <summary>
            Se genera un plano de core horizontal que corresponde al indice que se pasa como argumento. Version RV
            </summary>
            <param name="indice">Numero de la fila que se debe extraer de cada DICOM</param>
            <returns>Core horizontal generado en la posicion indicada</returns>
        </member>
        <member name="M:RockStatic.MyDataCube.GenerarCoreVertical(System.Int32)">
            <summary>
            Se genera un plano de core Vertical que corresponde al indice que se pasa como argumento
            </summary>
            <param name="indice">Numero de la fila que se debe extraer de cada DICOM</param>
            <returns>Core vertical generado en la posicion indicada</returns>
        </member>
        <member name="M:RockStatic.MyDataCube.GenerarCoresHorizontales">
            <summary>
            Genera todos y cada uno de los planos de corte horizontales del core. No genera imágenes sino los List de ushort para cada plano de corte
            </summary>
        </member>
        <member name="M:RockStatic.MyDataCube.GenerarCortesHorizontalesRV">
            <summary>
            Genera todos y cada uno de los planos de corte horizontales del core. No genera imágenes sino los List de ushort para cada plano de corte. Version para RV
            </summary>
        </member>
        <member name="M:RockStatic.MyDataCube.GenerarCoresVerticales">
            <summary>
            Genera todos y cada uno de los planos de corte verticales del datacubo. No genera imágenes sino los List de ushort para cada plano de corte
            </summary>
        </member>
        <member name="M:RockStatic.MyDataCube.CreateBitmapCorte(System.Collections.Generic.List{System.UInt16},System.Int32,System.Int32)">
            <summary>
            Se mapea un List de ushort, obtenido de un corte horizontal/vertical a una imagen Bitmap
            </summary>
            <param name="pixels16">List de ushort que contiene la informacion CT de cada pixel</param>
            <param name="width">Ancho deseado de la imagen resultante</param>
            <param name="height">Alto deseado de la imagen resultante</param>
            <returns>Imagen reconstruida a partir del List de ushort</returns>
        </member>
        <member name="M:RockStatic.MyDataCube.GetMinimo">
            <summary>
            Obtiene el valor mínimo de TODO el datacubo
            </summary>
            <returns>Valor minimo de todo el datacubo</returns>
        </member>
        <member name="M:RockStatic.MyDataCube.GetMaximo">
            <summary>
            Obtiene el valor maximo de TODO el datacubo
            </summary>
            <returns>Valor maximo de todo el datacubo</returns>
        </member>
        <member name="M:RockStatic.MyDataCube.CreateBitmapCorte(System.Collections.Generic.List{System.UInt16},System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Se mapea un List de ushort, obtenido de un corte horizontal/vertical a una imagen Bitmap normalizada según los parámetros de entrada
            </summary>
            <param name="pixels16">List de ushort que contiene la informacion CT de cada pixel</param>
            <param name="width">Ancho deseado de la imagen resultante</param>
            <param name="height">Alto deseado de la imagen resultante</param>
            <param name="minNormalizacion">Valor minimo CT de la normalizacion</param>
            <param name="maxNormalizacion">Valor maximo CT de la normalizacion</param>
            <returns>Imagen reconstruida a partir del List de ushort</returns>
        </member>
        <member name="T:RockStatic.MyDicom">
            <summary>
            Wrapper para la libreria EvilDICOM (Rex Cardan, http://www.rexcardan.com/evildicom/) con modificaciones propias para ser manejadas por la suite RockUIS
            Un objeto MyDicom maneja un objeto de DICOM según la estructura de EvilDicom. Se incluyen los metodos para modificar el DICOM y guardarlo en disco
            </summary>
        </member>
        <member name="F:RockStatic.MyDicom.minPixVal">
            <summary>
            Minimo valor del DICOM. Es necesario mantener este valor para efectos de codificación de los pixel_data y escritura en disco
            </summary>
        </member>
        <member name="F:RockStatic.MyDicom.signedImage">
            <summary>
            Indica si el DICOM contienen signo o no. Es necesario mantener este valor para efectos de codificación de los pixel_data y escritura en disco
            </summary>
        </member>
        <member name="F:RockStatic.MyDicom.bmp">
            <summary>
            Imagen normalizada asociadas al objeto DICOM
            </summary>
        </member>
        <member name="F:RockStatic.MyDicom.pixelData">
            <summary>
            List que contiene la informacion de pixeles CT (ushort) para el DICOM cargado        
            </summary>
        </member>
        <member name="F:RockStatic.MyDicom.segCore">
            <summary>
            List que contiene los pixeles CT de la segmentacion transversal del core del DICOM
            </summary>
        </member>
        <member name="F:RockStatic.MyDicom.dcm">
            <summary>
            Objeto DICOM cargado
            </summary>
        </member>
        <member name="F:RockStatic.MyDicom.selector">
            <summary>
            Selector del objeto DICOM cargado
            </summary>
        </member>
        <member name="M:RockStatic.MyDicom.#ctor">
            <summary>
            Constructor por defecto
            </summary>
        </member>
        <member name="M:RockStatic.MyDicom.#ctor(System.String)">
            <summary>
            Constructor con asignación. Lee la ruta del DICOM, lo lee y decodifica la informacion de pixeles. NO NORMALIZA
            </summary>
            <param name="ruta">Ruta del DICOM a leer</param>
        </member>
        <member name="M:RockStatic.MyDicom.Byte2Pixels16(System.Collections.Generic.List{System.Byte},System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.String)">
            <summary>
            Decodifica la informacion binaria de PIXEL_DATA en numeros CT
            </summary>
            <param name="pixelValues">List obtenido de EvilDICOM con la informacion binaria de pixeles</param>
            <param name="width">Valor COLUMNS obtenido de EvilDICOM</param>
            <param name="height">Valor ROWS obtenido de EvilDICOM</param>
            <param name="pixelRepresentation">Valor PIXEL_REPRESENTATION obtenido de EvilDICOM</param>
            <param name="rescaleSlope">Valor RESCALE_SLOPE obtenido de EvilDICOM</param>
            <param name="rescaleIntercept">Valor RESCALE_INTERCEPT obtenido de EvilDICOM</param>
            <param name="photoInterpretation">Valor PHOTO_INTERPRETATION obtenido de EvilDICOM</param>
            <returns></returns>
        </member>
        <member name="M:RockStatic.MyDicom.Pixels162Byte(System.Collections.Generic.List{System.UInt16},System.Int32,System.Double,System.Double,System.String)">
            <summary>
            Convierte la información de pixeles (cropped o no) en CT a bytes
            </summary>
            <param name="pixels16">List con la información CT en cada pixel</param>
            <param name="pixelRepresentation">Valor PIXEL_REPRESENTATION obtenido de EvilDICOM</param>
            <param name="rescaleSlope">Valor RESCALE_SLOPE obtenido de EvilDICOM</param>
            <param name="rescaleIntercept">Valor RESCALE_INTERCEPT obtenido de EvilDICOM</param>
            <param name="photoInterpretation">Valor PHOTO_INTERPRETATION obtenido de EvilDICOM</param>
            <returns>List de bytes codificado</returns>
        </member>
        <member name="M:RockStatic.MyDicom.CropCTRectangle(System.Collections.Generic.List{System.UInt16},System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Toma el List de ushort, que se mapea a una imagen BMP, y se recorta los elementos que se mapean en un area cuadrada de centro (xcenter,ycenter) de ancho 2*anchoRect y de largo 2*largoRect
            </summary>
            <param name="pixels16">List con la información CT en cada pixel</param>
            <param name="xcenter">Coordenadas cartesianas del centro X, con cero en la esquina superior izquierda</param>
            <param name="ycenter">Coordenadas cartesianas del centro Y, con cero en la esquina superior izquierda</param>
            <param name="altoRect">Distancia del centro al borde superior del rectangulo</param>
            <param name="anchoRect">Distancia del centro al borde lateral del rectangulo</param>
            <param name="width">Ancho de la imagen original</param>
            <param name="height">Alto de la imagen original</param>
            <returns></returns>
        </member>
        <member name="M:RockStatic.MyDicom.CropCTCircle(System.Collections.Generic.List{System.UInt16},System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Toma el List de ushort, que se mapea a una imagen BMP, y recorta los elementos que se mapean un area circular de centro (xcenter,ycenter) de radio rad
            </summary>
            <param name="pixels16">List con la información CT en cada pixel</param>
            <param name="xcenter">Coordenadas cartesianas del centro X, con cero en la esquina superior izquierda</param>
            <param name="ycenter">Coordenadas cartesianas del centro Y, con cero en la esquina superior izquierda</param>
            <param name="rad">Radio del circulo a extraer</param>
            <param name="width">Ancho de la imagen original</param>
            <param name="height">Alto de la imagen original</param>
        </member>
        <member name="M:RockStatic.MyDicom.CrearBitmap(System.Collections.Generic.List{System.UInt16},System.Int32,System.Int32)">
            <summary>
            Crea un Bitmap a partir de la informacion de pixeles, en CT
            </summary>
            <param name="pixels16">List de shorts con la informacion CT de cada pixel</param>
            <param name="width">Ancho deseado de la imagen</param>
            <param name="height">Alto deseado de la imagen</param>
            <returns>Imagen resultante</returns>
        </member>
        <member name="M:RockStatic.MyDicom.CreateBitmap(System.Collections.Generic.List{System.UInt16},System.Int32,System.Int32)">
            <summary>
            Crea un Bitmap a partir de la informacion de pixeles, en CT, y guarda la imagen en la instancia bmp de la clase
            </summary>
            <param name="pixels16">List de shorts con la informacion CT de cada pixel</param>
            <param name="width">Ancho deseado de la imagen</param>
            <param name="height">Alto deseado de la imagen</param>
        </member>
        <member name="M:RockStatic.MyDicom.CreateBitmap(System.Collections.Generic.List{System.UInt16},System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Crea un Bitmap a partir de la informacion de pixeles, en CT, normalizando segun los límites que se le pasan, y guarda la imagen en la instancia bmp de la clase
            </summary>
            <param name="pixels16">List de shorts con la informacion CT de cada pixel</param>
            <param name="width">Ancho deseado de la imagen</param>
            <param name="height">Alto deseado de la imagen</param>
            <param name="minNormalizacion">Valor minimo CT de la normalizacion</param>
            <param name="maxNormalizacion">Valor maximo CT de la normalizacion</param>
        </member>
        <member name="M:RockStatic.MyDicom.CrearBitmap(System.Collections.Generic.List{System.UInt16},System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Crea un Bitmap a partir de la informacion de pixeles, en CT, normalizando segun los límites que se le pasan, y guarda la imagen en la instancia bmp de la clase
            </summary>
            <param name="pixels16">List de shorts con la informacion CT de cada pixel</param>
            <param name="width">Ancho deseado de la imagen</param>
            <param name="height">Alto deseado de la imagen</param>
            <param name="minNormalizacion">Valor minimo CT de la normalizacion</param>
            <param name="maxNormalizacion">Valor maximo CT de la normalizacion</param>
        </member>
        <member name="T:RockStatic.CPermisos">
            <summary>
            Clase que contiene los perfiles de lo usuario para la aplicación ROCKSTATIC
            </summary>
        </member>
        <member name="F:RockStatic.CPermisos.permiso">
            <summary>
            Nombre del nivel de seguridad que tiene el perfil
            </summary>
        </member>
        <member name="T:RockStatic.CPhantom">
            <summary>
            Permite guardar la información de los phantom
            </summary>
        </member>
        <member name="F:RockStatic.CPhantom.mediaHigh">
            <summary>
            Valor medio de la distribución de probabilidad del phantom para HIGH
            </summary>
        </member>
        <member name="F:RockStatic.CPhantom.desvHigh">
            <summary>
            Valor de la desviación estandar de la distribución de probabilidad del phantom para HIGH
            </summary>
        </member>
        <member name="F:RockStatic.CPhantom.mediaLow">
            <summary>
            Valor medio de la distribución de probabilidad del phantom para LOW
            </summary>
        </member>
        <member name="F:RockStatic.CPhantom.desvLow">
            <summary>
            Valor de la desviación estandar de la distribución de probabilidad del phantom para LOW
            </summary>
        </member>
        <member name="F:RockStatic.CPhantom.densidad">
            <summary>
            Valor de la densidad del phantom
            </summary>
        </member>
        <member name="F:RockStatic.CPhantom.zeff">
            <summary>
            Valor del número atómico del phantom
            </summary>
        </member>
        <member name="M:RockStatic.CPhantom.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor con asignacion
            </summary>
            <param name="_mediaHigh">Valor medio de la distribución de probabilidad del phantom en HIGH</param>
            <param name="_desvHigh">Valor de la desviación estandar de la distribución de probabilidad del phantom en HIGH</param>
            <param name="_mediaLow">Valor medio de la distribución de probabilidad del phantom en LOW</param>
            <param name="_desvLow">Valor de la desviación estandar de la distribución de probabilidad del phantom en LOW</param>
            <param name="_densidad">Valor de la densidad</param>
            <param name="_zeff">Valor del numero atomico efectivo</param>
        </member>
        <member name="M:RockStatic.CPhantom.#ctor(RockStatic.CPhantom)">
            <summary>
            Constructor con duplicacion
            </summary>
            <param name="phantom">Objeto CPhantom a duplicar</param>
        </member>
        <member name="T:RockStatic.CUsuario">
            <summary>
            Clase que contiene la información de los usuarios que pueden ejecutar ROCKSTATIC
            </summary>
        </member>
        <member name="F:RockStatic.CUsuario.Nombre">
            <summary>
            Nombre del usuario
            </summary>
        </member>
        <member name="F:RockStatic.CUsuario.Apellidos">
            <summary>
            Apellidos del usuario
            </summary>
        </member>
        <member name="F:RockStatic.CUsuario.Afiliacion">
            <summary>
            Tipo de afiliacion del usuario
            </summary>
        </member>
        <member name="F:RockStatic.CUsuario.permisos">
            <summary>
            Lista de perfiles de uso que puede tener el usuario
            </summary>
        </member>
        <member name="M:RockStatic.CUsuario.#ctor">
            <summary>
            Constructor por defecto
            </summary>
        </member>
        <member name="T:RockStatic.CurvasForm">
            <summary>
            Ventana que presenta las curvas de densidad y numero atomico efectivo estimadas a partir de la data CT cargada
            </summary>
        </member>
        <member name="F:RockStatic.CurvasForm.padre">
            <summary>
            Referencia al MainForm
            </summary>
        </member>
        <member name="F:RockStatic.CurvasForm.Dfm">
            <summary>
            Variable intermedia para el calculo de propiedades estaticas
            </summary>
        </member>
        <member name="F:RockStatic.CurvasForm.Zfme">
            <summary>
            Variable intermedia para el calculo de propiedades estaticas
            </summary>
        </member>
        <member name="F:RockStatic.CurvasForm.Pefm">
            <summary>
            Variable intermedia para el calculo de propiedades estaticas
            </summary>
        </member>
        <member name="F:RockStatic.CurvasForm.profundidad">
            <summary>
            Vector con los valores de profundidad para las propiedades estaticas estimadas
            </summary>
        </member>
        <member name="M:RockStatic.CurvasForm.CentrarForm">
            <summary>
            Centra el Form en medio del MDI parent
            </summary>
        </member>
        <member name="M:RockStatic.CurvasForm.Estimar">
            <summary>
            Se estiman las propiedades estáticas en función de la profundidad del core 
            </summary>
        </member>
        <member name="F:RockStatic.CurvasForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RockStatic.CurvasForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RockStatic.CurvasForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RockStatic.PreviewSegForm">
            <summary>
            Ventana que presenta al usuario el resultado preliminar de la segmentacion de los elementos core y phantoms
            </summary>
        </member>
        <member name="F:RockStatic.PreviewSegForm.padre">
            <summary>
            Referencia al MainForm padre
            </summary>
        </member>
        <member name="F:RockStatic.PreviewSegForm.core">
            <summary>
            Corte del core a mostrar
            </summary>
        </member>
        <member name="F:RockStatic.PreviewSegForm.p1">
            <summary>
            Corte del phantom p1
            </summary>
        </member>
        <member name="F:RockStatic.PreviewSegForm.p2">
            <summary>
            Corte del phantom p1
            </summary>
        </member>
        <member name="F:RockStatic.PreviewSegForm.p3">
            <summary>
            Corte del phantom p1
            </summary>
        </member>
        <member name="F:RockStatic.PreviewSegForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RockStatic.PreviewSegForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RockStatic.PreviewSegForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RockStatic.SegmentacionForm">
            <summary>
            Ventana que presenta las herramientas para realizar la segmentacion transversal de los DICOM cargados
            </summary>
        </member>
        <member name="F:RockStatic.SegmentacionForm.mouseLoc">
            <summary>
            Area a hacer zoom de la imagen del dicom
            </summary>
        </member>
        <member name="F:RockStatic.SegmentacionForm.padre">
            <summary>
            Referencia al MainForm padre
            </summary>
        </member>
        <member name="F:RockStatic.SegmentacionForm.countClick">
            <summary>
            Contador para clicks
            </summary>
        </member>
        <member name="F:RockStatic.SegmentacionForm.tempClicks">
            <summary>
            Array que guarda las coordenadas de los clicks necesarios para dibujar un circulo
            </summary>
        </member>
        <member name="F:RockStatic.SegmentacionForm.pen1">
            <summary>
            Lapiz con el que se dibujan los circulos
            </summary>
        </member>
        <member name="F:RockStatic.SegmentacionForm.pen2">
            <summary>
            Lapiz para dibujar el circulo seleccionado
            </summary>
        </member>
        <member name="F:RockStatic.SegmentacionForm.pen3">
            <summary>
            Lapiz para dibujar el area del centro del zoom
            </summary>
        </member>
        <member name="F:RockStatic.SegmentacionForm.controlPaint">
            <summary>
            variable de control para evitar que se lance el evento Paint de pictCore
            </summary>
        </member>
        <member name="F:RockStatic.SegmentacionForm.elementosScreen">
            <summary>
            Lista dinamica de elementos a dibujar en pantalla
            </summary>
        </member>
        <member name="F:RockStatic.SegmentacionForm.countAreas">
            <summary>
            contador de areas creadas
            </summary>
        </member>
        <member name="M:RockStatic.SegmentacionForm.SetForm">
            <summary>
            Se llena el ListBox, se reestablece el TrackBar
            </summary>
        </member>
        <member name="M:RockStatic.SegmentacionForm.ResetPictBox">
            <summary>
            Se resetea el PictureBox principal
            </summary>
        </member>
        <member name="M:RockStatic.SegmentacionForm.ResetCountClick">
            <summary>
            Se resetea el conteo de clicks
            </summary>
        </member>
        <member name="M:RockStatic.SegmentacionForm.FormatToAForge(System.Drawing.Bitmap)">
            <summary>
            Formatea una imagen para poder ser usada por la libreria AForge
            </summary>
            <param name="original">Imagen original</param>
            <returns>Imagen formateada para AForge</returns>
        </member>
        <member name="M:RockStatic.SegmentacionForm.AddElemento">
            <summary>
            Se calcula el nuevo elemento usando los 3-clicks realizados sobre la imagen, y se agrega al List
            </summary>
        </member>
        <member name="M:RockStatic.SegmentacionForm.AddList(RockStatic.CCuadrado)">
            <summary>
            Se agrega un elemento (CCuadrado) al ListBox
            </summary>
        </member>
        <member name="M:RockStatic.SegmentacionForm.LlenarList">
            <summary>
            Se llena por completo el ListBox con toda la informacion que halla en memoria
            </summary>
        </member>
        <member name="M:RockStatic.SegmentacionForm.pictElemento_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            El evento es el encargado de pintar todos los elementos en el PictureBox
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:RockStatic.SegmentacionForm.ResetList">
            <summary>
            Se vacia la lista y se llena con la informacion en memoria
            </summary>
        </member>
        <member name="M:RockStatic.SegmentacionForm.DetectarBordes">
            <summary>
            Este metodo toma la imagen en pantalla, realiza una copia, y detecta las areas circulares 
            Las areas circulares se dibujan en la imagen en pantalla
            </summary>
            <returns>Vector Rectangle[] con las areas encontradas</returns>
        </member>
        <member name="M:RockStatic.SegmentacionForm.Filtrar">
            <summary>
            Modifica el brillo y contraste de la imagen que aparece en pantalla
            </summary>
        </member>
        <member name="F:RockStatic.SegmentacionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RockStatic.SegmentacionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RockStatic.SegmentacionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RockStatic.CheckForm">
            <summary>
            Forms para visualizar las imagenes seleccionadas en la creacion de un nuevo proyecto
            </summary>
        </member>
        <member name="F:RockStatic.CheckForm.padre">
            <summary>
            Referencia al MainForm padre
            </summary>
        </member>
        <member name="F:RockStatic.CheckForm.filesHigh">
            <summary>
            Referencia que indica si se han cargado los archivos HIGH (true) o los archivos LOW (false)
            </summary>
        </member>
        <member name="F:RockStatic.CheckForm.newProjectForm">
            <summary>
            Referencia al form NewProjectForm que invoca
            </summary>
        </member>
        <member name="F:RockStatic.CheckForm.temp">
            <summary>
            Lista de rutas de los DICOMs a cargar y revisar temporalmente
            </summary>
        </member>
        <member name="F:RockStatic.CheckForm.tempDicom">
            <summary>
            Datacubo temporal para revisar los DICOMs cargados
            </summary>
        </member>
        <member name="M:RockStatic.CheckForm.#ctor">
            <summary>
            Form para revisar los DICOMs que se han seleccionado, de manera temporal, en NewProjectForm
            </summary>
        </member>
        <member name="M:RockStatic.CheckForm.btnCancelar_Click(System.Object,System.EventArgs)">
            <summary>
            Se presiona el boton Cancelar y se cancelan todos los cambios realizados sobre la lista de dicoms
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:RockStatic.CheckForm.SetForm">
            <summary>
            Se llena el ListBox, se reestablece el TrackBar
            </summary>
        </member>
        <member name="M:RockStatic.CheckForm.GetNameFile(System.String)">
            <summary>
            Se pasa una ruta completa y se extrae el nombre del archivo
            </summary>
            <param name="file">Ruta completa del archivo</param>
            <returns>Nombre del archivo, con su extension</returns>
        </member>
        <member name="M:RockStatic.CheckForm.SetList(System.Collections.Generic.List{System.String})">
            <summary>
            Se crea una copia (local) de los elementos a mostrar
            </summary>
        </member>
        <member name="M:RockStatic.CheckForm.CentrarForm">
            <summary>
            Centra el Form en medio del MDI parent
            </summary>
        </member>
        <member name="F:RockStatic.CheckForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RockStatic.CheckForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RockStatic.CheckForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RockStatic.CProyecto">
            <summary>
            La clase Proyecto guarda la ruta de los archivos de imagenes/dycom ademas de las 
            secciones de Core y phantom, y las areas de interes
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.name">
            <summary>
            Nombre del proyecto
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.segmentacionDone">
            <summary>
            Indica si ya se ha realizado la segmentacion de los elementos HIGH y LOW (la misma informacion geometrica sirve para ambos)
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.folderPath">
            <summary>
            Guarda la ruta de la carpeta donde se encuentra el proyecto
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.folderHigh">
            <summary>
            Guarda la ruta de la carpeta donde se encuentran las imagenes HIGH
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.folderLow">
            <summary>
            Guarda la ruta de la carpeta donde se encuentran las imagenes LOW
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.areasDone">
            <summary>
            Indica si ya se ha realizado la seleccion de areas de interes de los elementos 
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.areaCore">
            <summary>
            Guarda las coordenadas del recuadro que enmarca el Core de los elementos HIGH
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.areaPhantom1">
            <summary>
            Guarda las coordenadas del recuadro que enmarca el Phantom de la IZQUIERDA de los elementos HIGH
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.areaPhantom2">
            <summary>
            Guarda las coordenadas del recuadro que enmarca el Phantom del CENTRO de los elementos HIGH
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.areaPhantom3">
            <summary>
            Guarda las coordenadas del recuadro que enmarca el Phantom de la DERECHA de los elementos HIGH
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.datacuboHigh">
            <summary>
            Instancia del datacubo que contiene todos los DICOMs High cargados
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.datacuboLow">
            <summary>
            Instancia del datacubo que contiene todos los DICOMs Low cargados
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.phantomEnDicom">
            <summary>
            Indica si los phantoms vienen incluidos en los DICOM
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.phantom1">
            <summary>
            Instancia del phantom 1
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.phantom2">
            <summary>
            Instancia del phantom 2
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.phantom3">
            <summary>
            Instancia del phantom 3
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.areasCore">
            <summary>
            Lista para guardar las areas seleccionadas del core
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.head">
            <summary>
            Profundidad de la cabeza de la muestra
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.tail">
            <summary>
            Profundida de la cola de la muestra
            </summary>
        </member>
        <member name="F:RockStatic.CProyecto.unidadProfundidad">
            <summary>
            Unidades de profundidad
            </summary>
        </member>
        <member name="M:RockStatic.CProyecto.#ctor(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Constructor con asignacion. Crea un proyecto, con su datacubo, a partir
            </summary>
            <param name="name_">Nombre a darle al proyecto</param>
            <param name="rutasHigh">Lista de rutas de DICOM High a cargar en el proyecto</param>
            <param name="rutasLow">Lista de rutas de DICOM Low a cargar en el proyecto</param>
            <param name="phantom">Indica si los DICOM contienen phantoms o no</param>
        </member>
        <member name="M:RockStatic.CProyecto.SetFolderPath(System.String)">
            <summary>
            Establece la ruta de la carpeta donde se guarda el proyecto, y las imagenes
            </summary>
            <param name="path">Ruta de la carpeta donde se guarda el proyecto</param>
        </member>
        <member name="M:RockStatic.CProyecto.Salvar">
            <summary>
            Guarda el proyecto en disco en la ruta indicada en las propiedades del metodo
            </summary>
        </member>
        <member name="M:RockStatic.CProyecto.SetCore(RockStatic.CCuadrado)">
            <summary>
            Establece las coordenadas para la segmentacion del Core con el tipo de dato CCuadrado
            </summary>
            <param name="elemento">CCuadrado que contiene la informacion del cuadrado</param>
        </member>
        <member name="M:RockStatic.CProyecto.GetCore">
            <summary>
            Devuelve el tipo de dato CCuadrado que contiene las coordenadas de la segmentacion del Core
            </summary>
            <returns>Objeto CCuadrado con la informacion del area del core</returns>
        </member>
        <member name="M:RockStatic.CProyecto.SetPhantom1(RockStatic.CCuadrado)">
            <summary>
            Establece las coordenadas para la segmentacion del Phantom1 con el tipo de dato CCuadrado
            </summary>
            <param name="elemento">CCuadrado que contiene la informacion del cuadrado</param>
        </member>
        <member name="M:RockStatic.CProyecto.SetPhantom2(RockStatic.CCuadrado)">
            <summary>
            Establece las coordenadas para la segmentacion del Phantom2 con el tipo de dato CCuadrado
            </summary>
            <param name="elemento">CCuadrado que contiene la informacion del cuadrado</param>
        </member>
        <member name="M:RockStatic.CProyecto.SetPhantom3(RockStatic.CCuadrado)">
            <summary>
            Establece las coordenadas para la segmentacion del Phantom3 con el tipo de dato CCuadrado
            </summary>
            <param name="elemento">CCuadrado que contiene la informacion del cuadrado</param>
        </member>
        <member name="M:RockStatic.CProyecto.GetPhantom1">
            <summary>
            Devuelve el tipo de dato CCuadrado que contiene las coordenadas de la segmentacion del Phantom1
            </summary>
            <returns>Objeto CCuadrado con la informacion del area del phantom 1</returns>
        </member>
        <member name="M:RockStatic.CProyecto.GetPhantom2">
            <summary>
            Devuelve el tipo de dato CCuadrado que contiene las coordenadas de la segmentacion del Phantom2
            </summary>
            <returns>Objeto CCuadrado con la informacion del area del phantom 2</returns>
        </member>
        <member name="M:RockStatic.CProyecto.GetPhantom3">
            <summary>
            Devuelve el tipo de dato CCuadrado que contiene las coordenadas de la segmentacion del Phantom3
            </summary>
            <returns>Objeto CCuadrado con la informacion del area del phantom 3</returns>
        </member>
        <member name="T:RockStatic.HomeForm">
            <summary>
            Ventana que funciona como Home al momento de ejecutar ROCKSTATIC
            </summary>
        </member>
        <member name="F:RockStatic.HomeForm.padre">
            <summary>
            Referencia al MainForm padre
            </summary>
        </member>
        <member name="F:RockStatic.HomeForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RockStatic.HomeForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RockStatic.HomeForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RockStatic.MainForm">
            <summary>
            Form principal. Contiene los tipos de datos globales y métodos estáticos
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.usuarios">
            <summary>
            Lista de usuarios admitidos para usar RockStatic
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.nuevoProyectoForm">
            <summary>
            Instancia del Form NewProjectForm
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.abiertoNuevoProyectoForm">
            <summary>
            Variable que indica si la ventana NewProjectForm esta abiera o no
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.checkForm">
            <summary>
            Instancia del Form CheckForm
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.abiertoCurvasForm">
            <summary>
            Variable que indica si la ventana CurvasForm esta abiera o no
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.curvasForm">
            <summary>
            Instancia del Form CheckForm
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.phantomForm">
            <summary>
            Instancia del Form PhantomForm
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.abiertoCheckForm">
            <summary>
            Variable que indica si la ventana CheckForm esta abierta o no
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.abiertoAboutForm">
            <summary>
            Indica si el form AboutForm esta abierto o no
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.aboutForm">
            <summary>
            Instancia del form AboutForm
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.abiertoPhantomsForm">
            <summary>
            Variable que indica si la ventana PhantomsForm esta abierta o no
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.phantoms2Form">
            <summary>
            Form para ingresar las densidades y Zeff de los phantoms, cuando estos se encuentran en los DICOM
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.abiertoPhantoms2Form">
            <summary>
            Indica si el form Phantoms2Form esta abierto o no
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.homeForm">
            <summary>
            Instancia del Form HomeForm
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.abiertoHomeForm">
            <summary>
            Variable que indica si la ventana HomeForm esta abierta o no
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.proyectoForm">
            <summary>
            Instancia del Form ProjectForm
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.abiertoProyectoForm">
            <summary>
            Variable que indica si la ventana ProjectForm esta abierta o no
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.actual">
            <summary>
            Instancia del Proyecto actual
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.segmentacionForm">
            <summary>
            Instancia del Form SegmentacionForm
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.abiertoSegmentacionForm">
            <summary>
            Variable que indica si la ventana SegmentacionForm esta abierta o no
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.abiertoPreviewSegForm">
            <summary>
            Variable que indica si la ventana PreviewSegForm esta abierta o no
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.previewSegForm">
            <summary>
            Instancia del form PreviewSegForm
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.waitingForm">
            <summary>
            Instancia del form WaitingForm
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.abiertoWaitingForm">
            <summary>
            Variable que indica si la ventana WaitingForm esta abierta o no
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.selecAreasForm">
            <summary>
            Instancia del form SelectAreasForm
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.abiertoSelectAreasForm">
            <summary>
            Variable que indica si la ventana SelectAreasForm esta abierta o no
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.selecAreas2Form">
            <summary>
            Instancia del form SelectAreasForm
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.abiertoSelectAreas2Form">
            <summary>
            Variable que indica si la ventana SelectAreasForm esta abierta o no
            </summary>
        </member>
        <member name="M:RockStatic.MainForm.AbrirProjectForm">
            <summary>
            Abre la ventana ProjectForm
            </summary>
        </member>
        <member name="M:RockStatic.MainForm.ShowWaiting(System.String)">
            <summary>
            Se muestra la ventana WaitingForm, con el mensaje que se muestra como argumento
            </summary>
            <param name="mensaje">Mensaje a mostrar en pantalla</param>
        </member>
        <member name="M:RockStatic.MainForm.CloseWaiting">
            <summary>
            Cierra la ventana WaitingForm
            </summary>
        </member>
        <member name="M:RockStatic.MainForm.CorregirPictBox2Original(RockStatic.CCuadrado,System.Int32,System.Int32)">
            <summary>
            Toma un CCuadrado, con coordenadas segun el PictureBox, y las transforma segun la imagen original
            </summary>
            <param name="elemento">CCuadrado que contiene la informacion del cuadrado</param>
            <param name="heighto">Alto de la imagen original</param>
            <param name="heigths">Alto del PictureBox</param>
            <returns></returns>
        </member>
        <member name="M:RockStatic.MainForm.CorregirOriginal2PictBox(RockStatic.CCuadrado,System.Int32,System.Int32)">
            <summary>
            Toma un CCuadrado, con coordenadas segun el original, y las transforma segun el PictureBox
            </summary>
            <param name="elemento">CCuadrado que contiene la informacion del cuadrado</param>
            <param name="heighto">Alto de la imagen original</param>
            <param name="heigths">Alto del PictureBox</param>
            <returns></returns>
        </member>
        <member name="M:RockStatic.MainForm.CropCirle(System.Drawing.Bitmap,RockStatic.CCuadrado)">
            <summary>
            Toma una imagen (el slide completo) y recorta un area circular delimitada por el elemento CCuadrado
            </summary>
            <param name="srcImage">Imagen original de la que se extraera el corte circular</param>
            <param name="elemento">Area de corte</param>
            <returns>Imagen recortada</returns>
        </member>
        <member name="M:RockStatic.MainForm.CorregirPictBox2Original(System.Int32,System.Int32,System.Int32)">
            <summary>
            Toma una coordenada, X o Y con coordenadas segun el PictureBox, y las transforma segun la imagen original
            </summary>
            <param name="coordenada">CCuadrado que contiene la informacion del cuadrado</param>
            <param name="heighto">Alto de la imagen original</param>
            <param name="heigths">Alto del PictureBox</param>
            <returns></returns>
        </member>
        <member name="M:RockStatic.MainForm.NuevoProyecto">
            <summary>
            Se crea un nuevo proyecto
            </summary>
        </member>
        <member name="M:RockStatic.MainForm.CerrarHomeForm">
            <summary>
            Cierra la ventana HomeForm
            </summary>
        </member>
        <member name="M:RockStatic.MainForm.CerrarCurvasForm">
            <summary>
            Cierra la ventana CurvasForm
            </summary>
        </member>
        <member name="M:RockStatic.MainForm.AbrirHome">
            <summary>
            Abre la ventana AbrirForm
            </summary>
        </member>
        <member name="M:RockStatic.MainForm.SeleccionarProyecto">
            <summary>
            Se selecciona la ruta donde se encuentra el archivo RSP
            </summary>
            <returns>True, el archivo se pudo abrir; False, el archivo no se pudo abrir</returns>
        </member>
        <member name="M:RockStatic.MainForm.AbrirProyecto(System.String)">
            <summary>
            Con la ruta del archivo RSP se procede a cargar en memoria el proyecto
            </summary>
            <param name="ruta"></param>
        </member>
        <member name="M:RockStatic.MainForm.CerrarPreviewSegForm">
            <summary>
            Cierra la ventana PreviewSegForm
            </summary>
        </member>
        <member name="M:RockStatic.MainForm.CerrarCheckForm">
            <summary>
            Cierra la ventana CheckForm
            </summary>
        </member>
        <member name="M:RockStatic.MainForm.CerrarPhantomForm">
            <summary>
            Cierra la ventana PhantomForm
            </summary>
        </member>
        <member name="M:RockStatic.MainForm.CerrarPhantom2Form">
            <summary>
            Cierra la ventana Phantom2Form
            </summary>
        </member>
        <member name="M:RockStatic.MainForm.CerrarSegmentacionForm">
            <summary>
            Cierra la ventana SegmentacionForm
            </summary>
        </member>
        <member name="M:RockStatic.MainForm.CerrarProjectForm">
            <summary>
            Cierra la ventana ProjectForm
            </summary>
        </member>
        <member name="M:RockStatic.MainForm.CerrarSelectAreasForm">
            <summary>
            Cierra la ventana SelectAreasForm
            </summary>
        </member>
        <member name="M:RockStatic.MainForm.CloseAll">
            <summary>
            Se cierran todas las ventanas disponibles y se vuelve al Home
            </summary>
        </member>
        <member name="F:RockStatic.MainForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RockStatic.MainForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RockStatic.MainForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RockStatic.NewProjectForm">
            <summary>
            Form para seleccionar los DICOMs High y Low que componen un proyecto
            </summary>
        </member>
        <member name="F:RockStatic.NewProjectForm.padre">
            <summary>
            Instancia del MainForm
            </summary>
        </member>
        <member name="F:RockStatic.NewProjectForm.tempHigh">
            <summary>
            Lista temporal donde se guardan los nombres de las imagenes HIGH seleccionadas
            </summary>
        </member>
        <member name="F:RockStatic.NewProjectForm.tempLow">
            <summary>
            Lista temporal donde se guardan los nombres de las imagenes LOW seleccionadas
            </summary>
        </member>
        <member name="F:RockStatic.NewProjectForm.tempPhantom1">
            <summary>
            Instancia temporal del phantom1
            </summary>
        </member>
        <member name="F:RockStatic.NewProjectForm.tempPhantom2">
            <summary>
            Instancia temporal del phantom2
            </summary>
        </member>
        <member name="F:RockStatic.NewProjectForm.tempPhantom3">
            <summary>
            Instancia temporal del phantom3
            </summary>
        </member>
        <member name="M:RockStatic.NewProjectForm.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:RockStatic.NewProjectForm.NewProjectForm_FormClosed(System.Object,System.Windows.Forms.FormClosedEventArgs)">
            <summary>
            Evento capturado al cerrar el Form
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:RockStatic.NewProjectForm.btnCancelar_Click(System.Object,System.EventArgs)">
            <summary>
            Boton Cancelar
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:RockStatic.NewProjectForm.CheckLargos">
            <summary>
            Se revisa que, de existir elementos, haya un numero igual de elementos HIGH y LOW
            </summary>
            <returns></returns>
        </member>
        <member name="M:RockStatic.NewProjectForm.btnSelHigh_Click(System.Object,System.EventArgs)">
            <summary>
            Se seleccionan los elementos HIGH
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:RockStatic.NewProjectForm.btnSelLow_Click(System.Object,System.EventArgs)">
            <summary>
            Se seleccionan los elementos LOW
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:RockStatic.NewProjectForm.SetTemp(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Se guarda la List de elementos modificados en el CheckForm en la instancia de CProyecto temp de NewProjectForm
            </summary>
            <param name="lista">List de string a guardar en la instancia de CProyecto</param>
            <param name="filesHigh">true: se guarda en HIGH; false: se guarda en LOW</param>
        </member>
        <member name="M:RockStatic.NewProjectForm.btnCrear_Click(System.Object,System.EventArgs)">
            <summary>
            Se crea el nuevo proyecto
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:RockStatic.NewProjectForm.CentrarForm">
            <summary>
            Se centra el Form con respecto al MDI parent
            </summary>
        </member>
        <member name="F:RockStatic.NewProjectForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RockStatic.NewProjectForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RockStatic.NewProjectForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RockStatic.PhantomsForm">
            <summary>
            Ventana que presenta la información necesaria para el modelo completo de phantoms
            </summary>
        </member>
        <member name="F:RockStatic.PhantomsForm.padre">
            <summary>
            Referencia al MainForm padre
            </summary>
        </member>
        <member name="F:RockStatic.PhantomsForm.newProjectForm">
            <summary>
            Referencia al form NewProjectForm que invoca
            </summary>
        </member>
        <member name="M:RockStatic.PhantomsForm.btnCerrar_Click(System.Object,System.EventArgs)">
            <summary>
            Se guardan los cambios y se cierra el Form
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:RockStatic.PhantomsForm.GenerarCampanaY(System.Double,System.Double,System.Collections.Generic.List{System.Double})">
            <summary>
            Genera un vector de 101 elementos con los elementos Y que forman una campana de Gauss
            </summary>
            <param name="media">Valor de la media de la distribucion normal</param>
            <param name="desv">Valor de la desvStd de la distribucion normal</param>
            <param name="x">Vector de 101 elementos con el eje X de la campana de Gauss</param>
            <returns>Vector de 101 elementos con el eje Y de la campana de Gauss</returns>
        </member>
        <member name="M:RockStatic.PhantomsForm.GenerarCampanaX(System.Double,System.Double)">
            <summary>
            Genera un vector de 101 elementos con los elementos X que forman una campana de Gauss
            </summary>
            <param name="media">Valor de la media de la distribucion normal</param>
            <param name="desv">Valor de la desvStd de la distribucion normal</param>
            <returns>Vector de 101 elementos con el eje X de la campana de Gauss</returns>
        </member>
        <member name="M:RockStatic.PhantomsForm.CentrarForm">
            <summary>
            Se centra el Form con respecto al MDI parent
            </summary>
        </member>
        <member name="F:RockStatic.PhantomsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RockStatic.PhantomsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RockStatic.PhantomsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RockStatic.Phantoms2Form">
            <summary>
            Ventana que presenta la información necesaria para el modelo simplificado de phantoms, solo densidad y numero atomico efectivo
            </summary>
        </member>
        <member name="F:RockStatic.Phantoms2Form.padre">
            <summary>
            Referencia al MainForm padre
            </summary>
        </member>
        <member name="F:RockStatic.Phantoms2Form.newProjectForm">
            <summary>
            Referencia al form NewProjectForm que invoca
            </summary>
        </member>
        <member name="M:RockStatic.Phantoms2Form.CentrarForm">
            <summary>
            Se centra el Form con respecto al MDI parent
            </summary>
        </member>
        <member name="F:RockStatic.Phantoms2Form.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RockStatic.Phantoms2Form.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RockStatic.Phantoms2Form.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:RockStatic.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:RockStatic.ProjectForm">
            <summary>
            Form que funciona como HOME para cada proyecto abierto
            </summary>
        </member>
        <member name="M:RockStatic.ProjectForm.SetForm">
            <summary>
            Establece todos los elementos visuales del Form
            </summary>
        </member>
        <member name="M:RockStatic.ProjectForm.btnAreasHigh_Click(System.Object,System.EventArgs)">
            <summary>
            Se inicia la seleccion de areas para los elementos HIGH
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:RockStatic.ProjectForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RockStatic.ProjectForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RockStatic.ProjectForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RockStatic.SplashScreenForm">
            <summary>
            Ventana que se carga al inicio de la ejecucion de RockStatic
            </summary>
        </member>
        <member name="F:RockStatic.SplashScreenForm.tmr">
            <summary>
            Temporizador de la pantalla Splash
            </summary>
        </member>
        <member name="F:RockStatic.SplashScreenForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RockStatic.SplashScreenForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RockStatic.SplashScreenForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RockStatic.WaitingForm">
            <summary>
            Form para mostrar un mensaje de espera
            </summary>
        </member>
        <member name="F:RockStatic.WaitingForm.padre">
            <summary>
            Referencia al MainForm de la aplicacion
            </summary>
        </member>
        <member name="M:RockStatic.WaitingForm.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:RockStatic.WaitingForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RockStatic.WaitingForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RockStatic.WaitingForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:RockStatic.WaitingForm.lblTexto">
            <summary>
            Mensaje de espera a mostrar en el Form
            </summary>
        </member>
        <member name="T:RockStatic.SelectAreasForm">
            <summary>
            Ventana para la selección de las areas de interes en la segmentaciones transversales
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreasForm.pen2">
            <summary>
            Lapiz para dibujar el circulo seleccionado
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreasForm.padre">
            <summary>
            Referencia al MainForm padre
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreasForm.controlPaint">
            <summary>
            variable de control para evitar que se lance el evento Paint de pictCore
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreasForm.tempClicksCore">
            <summary>
            Array que guarda las coordenadas de los clicks necesarios para dibujar un circulo
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreasForm.changes">
            <summary>
            control de cambios
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreasForm.countClickCore">
            <summary>
            Contador para clicks
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreasForm.countAreas">
            <summary>
            Contador de areas de interes creadas para agregar al nombre
            </summary>
        </member>
        <member name="M:RockStatic.SelectAreasForm.AddElemento(RockStatic.CCirculo[],System.String)">
            <summary>
            Se calcula el nuevo elemento usando los 3-clicks realizados sobre la imagen, y se agrega al List
            </summary>
        </member>
        <member name="M:RockStatic.SelectAreasForm.LlenarListAreas">
            <summary>
            Se llena el listbox de las areas de interes
            </summary>
        </member>
        <member name="M:RockStatic.SelectAreasForm.ResetCountClickCore">
            <summary>
            Se resetea el conteo de clicks
            </summary>
        </member>
        <member name="M:RockStatic.SelectAreasForm.Filtrar(System.Int32)">
            <summary>
            Modifica el brillo y contraste de la imagen que aparece en pantalla
            </summary>
        </member>
        <member name="M:RockStatic.SelectAreasForm.ResetCountClick">
            <summary>
            Se resetea el conteo de clicks
            </summary>
        </member>
        <member name="M:RockStatic.SelectAreasForm.btnSelall_Click(System.Object,System.EventArgs)">
            <summary>
            se crea un area que englobe todo la segmentacion
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:RockStatic.SelectAreasForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RockStatic.SelectAreasForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RockStatic.SelectAreasForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RockStatic.SelectAreas2Form">
            <summary>
            Ventana para presentar la reconstruccion longitudinal 2D del volumen seleccionado (areas de interes)
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreas2Form.padre">
            <summary>
            Referencia al MainForm padre
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreas2Form.brocha">
            <summary>
            brocha con color semitransparente
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreas2Form.lapiz">
            <summary>
            Pen que toma el color de Brocha
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreas2Form.brocha2">
            <summary>
            brocha con color semitransparente
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreas2Form.lapiz2">
            <summary>
            Pen que toma el color de Brocha
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreas2Form.brocha3">
            <summary>
            Brocha con color verde
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreas2Form.lapiz3">
            <summary>
            Pen que toma el color de brocha3
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreas2Form.minimo">
            <summary>
            Guarda el menor valor CT de todo el datacubo
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreas2Form.maximo">
            <summary>
            Guarda el mayor valor CT de todo el datacuto
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreas2Form.factor">
            <summary>
            Establece el factor de escalado de ancho de las imagenes de corte generadas
            </summary>
        </member>
        <member name="M:RockStatic.SelectAreas2Form.Pintar">
            <summary>
            Se invalidan los pictBox para repintar las areas seleccionadas
            </summary>
        </member>
        <member name="F:RockStatic.SelectAreas2Form.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RockStatic.SelectAreas2Form.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RockStatic.SelectAreas2Form.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RockStatic.ZzzzRangeBar">
            <summary>
            The ZzzzRangeBar class describes a slide control with two buttons.
            A number range is assigned to the control and with the two slide
            buttons you can select an interval inside the range. This control can
            p.e. used for threshold setting in an image processing tool.
            If you push with left mouse button on a slide button it will marked and
            while mouse button is pressed you can move the slider left and right.
            Otherwise you can use the keys + and - to manipulate the slider position.
            The control will throw two events. While left mouse button is pressed and the 
            position of one slider has changed the event OnRangeChanging will generate and
            if you release mouse button, the event OnRangeChanged signals program that
            a new range was selected.
            </summary>
        </member>
        <member name="F:RockStatic.ZzzzRangeBar.components">
            <summary> 
            designer variable
            </summary>
        </member>
        <member name="M:RockStatic.ZzzzRangeBar.Dispose(System.Boolean)">
            <summary> 
            Die verwendeten Ressourcen bereinigen.
            </summary>
        </member>
        <member name="M:RockStatic.ZzzzRangeBar.InitializeComponent">
            <summary> 
            Erforderliche Methode für die Designerunterstützung. 
            Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
            </summary>
        </member>
        <member name="M:RockStatic.ZzzzRangeBar.SelectRange(System.Int32,System.Int32)">
            <summary>
            set selected range
            </summary>
            <param name="left">left side of range</param>
            <param name="right">right side of range</param>
        </member>
        <member name="M:RockStatic.ZzzzRangeBar.SetRangeLimit(System.Double,System.Double)">
            <summary>
            set range limits
            </summary>
            <param name="left">left side of range limit</param>
            <param name="right">right side of range limit</param>
        </member>
        <member name="M:RockStatic.ZzzzRangeBar.Pos2Range">
            <summary>
             transform pixel position to range position
            </summary>
        </member>
        <member name="M:RockStatic.ZzzzRangeBar.Range2Pos">
            <summary>
             transform range position to pixel position
            </summary>
        </member>
        <member name="M:RockStatic.ZzzzRangeBar.OnResize(System.Object,System.EventArgs)">
            <summary>
            method to handle resize event
            </summary>
            <param name="sender">object that sends event to resize</param>
            <param name="e">event parameter</param>
        </member>
        <member name="M:RockStatic.ZzzzRangeBar.OnKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            method to handle key pressed event
            </summary>
            <param name="sender">object that sends key pressed event</param>
            <param name="e">event parameter</param>
        </member>
        <member name="P:RockStatic.ZzzzRangeBar.HeightOfTick">
            <summary>
            set or get tick height
            </summary>
        </member>
        <member name="P:RockStatic.ZzzzRangeBar.HeightOfMark">
            <summary>
            set or get mark knob height
            </summary>
        </member>
        <member name="P:RockStatic.ZzzzRangeBar.HeightOfBar">
            <summary>
            set/get height of mark
            </summary>
        </member>
        <member name="P:RockStatic.ZzzzRangeBar.Orientation">
            <summary>
            set or get range bar orientation
            </summary>
        </member>
        <member name="P:RockStatic.ZzzzRangeBar.ScaleOrientation">
            <summary>
            set or get scale orientation
            </summary>
        </member>
        <member name="P:RockStatic.ZzzzRangeBar.RangeMaximum">
            <summary>
             set or get right side of range
            </summary>
        </member>
        <member name="P:RockStatic.ZzzzRangeBar.RangeMinimum">
            <summary>
            set or get left side of range
            </summary>
        </member>
        <member name="P:RockStatic.ZzzzRangeBar.TotalMaximum">
            <summary>
            set or get right side of total range
            </summary>
        </member>
        <member name="P:RockStatic.ZzzzRangeBar.TotalMinimum">
            <summary>
            set or get left side of total range
            </summary>
        </member>
        <member name="P:RockStatic.ZzzzRangeBar.DivisionNum">
            <summary>
            set or get number of divisions
            </summary>
        </member>
        <member name="P:RockStatic.ZzzzRangeBar.InnerColor">
            <summary>
            set or get color of inner range
            </summary>
        </member>
        <member name="T:RockStatic.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:RockStatic.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:RockStatic.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:RockStatic.Properties.Resources.close">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RockStatic.Properties.Resources.colciencias">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RockStatic.Properties.Resources.demaximize">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RockStatic.Properties.Resources.ecopetrol">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RockStatic.Properties.Resources.greenTick">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RockStatic.Properties.Resources.hdsp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RockStatic.Properties.Resources.hour_glass_icon">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RockStatic.Properties.Resources.Logo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RockStatic.Properties.Resources.Logo_Big">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RockStatic.Properties.Resources.LogoHDSP">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RockStatic.Properties.Resources.maximize">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RockStatic.Properties.Resources.minimize">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RockStatic.Properties.Resources.redX">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RockStatic.Properties.Resources.RockStaticGreen">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RockStatic.Properties.Resources.UISLogo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
    </members>
</doc>
